<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration 
PUBLIC "-//mybatis.org//DTD Config 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>  <!-- 和spring整合后 environments配置将废除 -->
<!-- 加载属性文件 -->
	<properties resource="db.properties">
		<!-- 在properties标签中还可以配置一些属性名和属性值 -->
		<!-- <property name="" value=""/> -->
	</properties>
	<!-- settings的配置 -->
	<settings>
		<!-- 打开延迟加载的开关 -->
		<setting name="lazyLoadingEnabled" value="true"/>
		<setting name="aggressiveLazyLoading" value="false"/>
		<!-- 将积极加载改成消极加载即按需加载 -->
	</settings>
	
	<!-- 全局的配置参数，需要时再设置 -->
	<!-- <settings></settings> -->
	<!-- 自定义别名 -->
	<typeAliases>
		<!-- 针对单个别名的定义 -->
		<!-- <typeAlias type="com.mybatis.po.User" alias="user"/> -->
		<!-- 批量起别名	 
		指定包名，mybatis会自动扫描包中po类，自动定义别名，别名就是类名，首字母大写或者小写都可以
		定义多个包就多复制几份 -->
		<package name="com.mybatis.po"/>
	</typeAliases>
	<environments default="development">
		<environment id="development">   <!-- 使用jdbc事务管理  事务控制mybatis-->
			<transactionManager type="JDBC" />   <!-- 数据库连接池 由mybatis管理 -->
			<dataSource type="POOLED">
				<property name="driver" value="${jdbc.driver}" />
				<property name="url" value="${jdbc.url}" />
				<property name="username" value="${jdbc.username}" />
				<property name="password" value="${jdbc.password}" />
			</dataSource>
		</environment>
	</environments>
	<!-- 加载映射文件 -->
	<mappers>
		<!-- 通过resource方法加载单个的映射文件 -->
		<!-- <mapper resource="sqlmap/User.xml"/>
		<mapper resource="mapper/UserMapper.xml"/> -->
		<!-- 通过mapper接口来加载映射文件
			需要遵循一定的规范：
				需要将mapper接口的类名和mapper.xml映射文件名称保持一致，且在一个目录
			前提是使用mapper代理的方法
			按照规范需要将mapper.java和mapper.xml放在同一个文件夹中
		 -->
		<!-- <mapper class="com.mybatis.mapper.UserMapper"/> -->
		<!-- 批量加载mapper
		指定mapper接口的包名，自动扫描包下的文件
		 -->
		<package name="com.mybatis.mapper"/>
	</mappers>
</configuration>